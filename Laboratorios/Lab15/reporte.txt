--------Lab 15 Reporte-------


Consulta de una tabla completa:
Algebra relacional.
materiales 

SQL
input: select * from materiales
output: (44 renglones)
muestra:
clave   descripción     costo
1000	Varilla 3/16	100.00
1010	Varilla 4/32	115.00
1020	Varilla 3/17	130.00

Selección
Algebra relacional.
SL{clave=1000}(materiales) 

SQL
input :
select * from materiales
where clave=1000
output: (1 renglón)
clave   descripción     costo
1000	Varilla 3/16	100.00

Proyección
Algebra relacional.
PR{clave,rfc,fecha} (entregan) 

SQL
input: select clave,rfc,fecha from entregan
output: (132 renglones)
clave   rfc             fecha
1000	AAAA800101   	1998-07-08 00:00:00.000
1000	AAAA800101   	1999-08-08 00:00:00.000
1000	AAAA800101   	2000-04-06 00:00:00.000

Reunión Natural

Algebra relacional.
entregan JN materiales  

SQL
input:
select * from materiales,entregan
where materiales.clave = entregan.clave
output: (132 renglones)
clave	descripción	costo	clave	rfc		numero	fecha
1000	Varilla 3/16	100.00	1000	AAAA800101   	5000	1998-07-08 00:00:00.000	165.00
1000	Varilla 3/16	100.00	1000	AAAA800101   	5019	1999-08-08 00:00:00.000	254.00
1000	Varilla 3/16	100.00	1000	AAAA800101   	5019	2000-04-06 00:00:00.000	7.00

Si algún material no se ha entregado ¿Aparecería en el resultado de esta consulta?
	No, no tendría sentido ya que si no se ha entregado no debería de estar en la tabla entregan, solo los materiales que se han entregado.

Reunión con criterio específico

Algebra relacional.
entregan JN{entregan.numero <= proyectos.numero} proyectos

SQL
input:
select * from entregan,proyectos
where entregan.numero < = proyectos.numero
output: (1188 renglones)
Clave	RFC		Numero	Fecha			Cantidad Numero Denominación
1000	AAAA800101   	5000	1998-07-08 00:00:00.000	165.00	 5000	Vamos Mexico
1200	EEEE800101   	5000	2000-03-05 00:00:00.000	177.00	 5000	Vamos Mexico
1400	AAAA800101   	5000	2002-03-12 00:00:00.000	382.00	5000	Vamos Mexico

Unión (se ilustra junto con selección)

Algebra relacional.
SL{clave=1450}(entregan) UN SL{clave=1300}(entregan)

SQL
input:
(select * from entregan where clave=1450)
union
(select * from entregan where clave=1300)
output: (3 renglones)
1300	GGGG800101   	5005	2002-06-10 00:00:00.000	521.00
1300	GGGG800101   	5005	2003-02-02 00:00:00.000	457.00
1300	GGGG800101   	5010	2003-01-08 00:00:00.000	119.00

¿Cuál sería una consulta que obtuviera el mismo resultado sin usar el operador Unión? Compruébalo. 
	select * from entregan where clave=1450 OR clave=1300

Intersección (se ilustra junto con selección y proyección)

Algebra relacional.
PR{clave}(SL{numero=5001}(entregan)) IN PR{clave}(SL{numero=5018}(entregan))

SQL
Nota: Debido a que en SQL server no tiene definida alguna palabra reservada que nos permita hacer esto de una manera entendible, veremos esta sección en el siguiente laboratorio con el uso de Subconsultas. Un ejemplo de un DBMS que si tiene la implementación de una palabra reservada para esta función es Oracle, en él si se podría generar la consulta con una sintaxis como la siguiente:
input: 
(select clave from entregan where numero=5001)
intersect
(select clave from entregan where numero=5018) 
output: (1 renglón)
clave
1010

Diferencia (se ilustra con selección )

Algebra relacional.
entregan - SL{clave=1000}(entregan)

SQL
(select * from entregan)
minus
(select * from entregan where clave=1000)

Nuevamente, "minus" es una palabra reservada que no está definida en SQL Server, define una consulta que regrese el mismo resultado. 
input: (select * from entregan where NOT clave=1000)
output: (129 renglones)
clave	rfc		numero	fecha			cantidad
1010	BBBB800101   	5001	2000-05-03 00:00:00.000	528.00
1010	BBBB800101   	5018	2000-11-10 00:00:00.000	667.00
1010	BBBB800101   	5018	2002-03-29 00:00:00.000	523.00

Producto cartesiano

Algebra relacional.
entregan X materiales

SQL
input: select * from entregan,materiales
output: (5808 renglones)
clave	rfc		numero	fecha			cantidad clave	descripción	costo
1000	AAAA800101   	5000	1998-07-08 00:00:00.000	165.00	 1000	Varilla 3/16	100.00
1000	AAAA800101   	5019	1999-08-08 00:00:00.000	254.00	 1000	Varilla 3/16	100.00
1000	AAAA800101   	5019	2000-04-06 00:00:00.000	7.00	 1000	Varilla 3/16	100.00

¿Cómo está definido el número de tuplas de este resultado en términos del número de tuplas de entregan y de materiales? 
	Numero de renglones en entregan * numero de renglones en materiales = 132 * 44 = 5808

Construcción de consultas a partir de una especificación

Plantea ahora una consulta para obtener las descripciones de los materiales entregados en el año 2000. 
input:
set dateformat dmy
select descripcion
from materiales, entregan 
where materiales.clave=entregan.clave AND 
Fecha BETWEEN '01/01/00' AND '31/12/00'
output: (28 renglones)
Descripcion
Varilla 3/16
Varilla 4/32
Varilla 4/32

¿Por qué aparecen varias veces algunas descripciones de material? 
	Porque no se utilizo un GROUP BY o DISTINCT y la consulta agarra todas las entregas en sus respectivas fechas sin importar que se repitan.

Uso del calificador distinct
En el resultado anterior, observamos que una misma descripción de material aparece varias veces.

Agrega la palabra distinct inmediatamente después de la palabra select a la consulta que planteaste antes.

¿Qué resultado obtienes en esta ocasión? 
Ya no aparecen nombres iguales en el resultado.
input:
set dateformat dmy
select DISTINCT descripcion
from materiales, entregan 
where materiales.clave=entregan.clave AND 
Fecha BETWEEN '01/01/00' AND '31/12/00'
output: (22 renglones)
Arena
Block
Cantera rosa

Ordenamientos.

Obtén los números y denominaciones de los proyectos con las fechas y cantidades de sus entregas, ordenadas por número de proyecto, presentando las fechas de la más reciente a la más antigua. 
input:
set dateformat dmy
select p.Numero, p.Denominacion, e.Fecha, e.Cantidad
from proyectos p, entregan e
where p.Numero=e.Numero
order by e.Fecha desc
output: (132 renglones)
numero	denominacion		fecha			cantidad
5004	Educando en Coahuila	2003-09-01 00:00:00.000	270.00
5011	Remodelación de aulas del IPP	2003-08-05 00:00:00.000	549.00
5011	Remodelación de aulas del IPP	2003-06-28 00:00:00.000	368.00

Operadores de cadena

input: SELECT * FROM materiales where Descripcion LIKE 'Si%' 
¿Qué resultado obtienes?
output: (2 renglones)
clave	descripcion	costo
1120	Sillar rosa	100.00
1130	Sillar gris	110.00


Explica que hace el símbolo '%'
Es un comodín que busca cadenas que tengan 0 o más caracteres y que se parezcan a lo que se insertó en la busqueda.

¿Qué sucede si la consulta fuera : LIKE 'Si' ?
No regresa nada porque no hay ningún material que su descripción sea completamente igual a "Si" 

¿Qué resultado obtienes?
input: SELECT * FROM materiales where Descripcion LIKE 'Si' 
output: (0 renglones)
Explica a qué se debe este comportamiento. 
No hay ningún material que su descripción sea completamente igual a "Si"

Operador (+,+=)

input:
DECLARE @foo varchar(40);
DECLARE @bar varchar(40);
SET @foo = '¿Que resultado';
SET @bar = ' ¿¿¿??? '
SET @foo += ' obtienes?';
PRINT @foo + @bar; 

¿Qué resultado obtienes de ejecutar el siguiente código?
output: ¿Que resultado obtienes? ¿¿¿??? 

¿Para qué sirve DECLARE?
Declarar variables

¿Cuál es la función de @foo?
Es el nombre de una variable con tipo de dato varchar(longitud = 40);

¿Que realiza el operador SET? 
Le da un valor a una variable

input: SELECT RFC FROM Entregan WHERE RFC LIKE '[A-D]%';
output: (72 renglones)
rfc
AAAA800101   
AAAA800101   
AAAA800101
descripcion:
La linea ingresada anteriormente te da los elementos con RFC que al principio tengan letras de la A a la D y después lo que sea.

input: SELECT RFC FROM Entregan WHERE RFC LIKE '[^A]%';
output: (114 renglones)
rfc 
BBBB800101   
BBBB800101   
BBBB800101
La linea ingresada anteriormente te da los elementos con RFC que no tengan A al principio.
 
input: SELECT Numero FROM Entregan WHERE Numero LIKE '___6'; 
output: (14 renglones)
Numero
5016
5016
5006
La linea ingresada anteriormente te regresa los numeros de los elementos que contengan un 6 al final.

Operadores Lógicos.

input:
SELECT Clave,RFC,Numero,Fecha,Cantidad
FROM Entregan
WHERE Numero Between 5000 and 5010; 
output: (60 renglones)
1000	AAAA800101   	5000	1998-07-08 00:00:00.000	165.00
1010	BBBB800101   	5001	2000-05-03 00:00:00.000	528.00
1020	CCCC800101   	5002	2001-07-29 00:00:00.000	582.00


¿Cómo filtrarías rangos de fechas? 
Un BETWEEN con las fechas al principio y al final del rango que deseas separadas por el AND.

input:
SELECT RFC,Cantidad, Fecha,Numero
FROM [Entregan]
WHERE [Numero] Between 5000 and 5010 AND
Exists ( SELECT [RFC]
FROM [Proveedores]
WHERE RazonSocial LIKE 'La%' and [Entregan].[RFC] = [Proveedores].[RFC]) 
output: (16 renglones)
RFC		Cantidad Fecha				Numero
AAAA800101   	165.00	 1998-07-08 00:00:00.000	5000
CCCC800101   	582.00	 2001-07-29 00:00:00.000	5002
AAAA800101   	86.00	 1999-01-12 00:00:00.000	5008

¿Qué hace la consulta?
Regresa las filas donde EXISTAN proovedores con RazonSocial con un nombre que empiece con "La".

¿Qué función tiene el paréntesis ( ) después de EXISTS?
Indica una subconsulta que se realizará.

Tomando de base la consulta anterior del EXISTS, realiza el query que devuelva el mismo resultado, pero usando el operador IN 
input:
SELECT RFC,Cantidad, Fecha,Numero
FROM [Entregan]
WHERE [Numero] Between 5000 and 5010 AND
RFC IN ( SELECT [RFC]
FROM [Proveedores]
WHERE RazonSocial LIKE 'La%' and [Entregan].[RFC] = [Proveedores].[RFC] ) 
output: (16 renglones)
RFC		Cantidad Fecha				Numero
AAAA800101   	165.00	 1998-07-08 00:00:00.000	5000
CCCC800101   	582.00	 2001-07-29 00:00:00.000	5002
AAAA800101   	86.00	 1999-01-12 00:00:00.000	5008

Tomando de base la consulta anterior del EXISTS, realiza el query que devuelva el mismo resultado, pero usando el operador NOT IN Realiza un ejemplo donde apliques algún operador : ALL, SOME o ANY 

NOT IN

input:
SELECT RFC,Cantidad, Fecha,Numero
FROM [Entregan]
WHERE [Numero] Between 5000 and 5010 AND
RFC NOT IN ( SELECT [RFC]
FROM [Proveedores]
WHERE RazonSocial LIKE 'La%' and [Entregan].[RFC] = [Proveedores].[RFC] ) 

output: (44 renglones)
RFC		Cantidad Fecha			Numero
BBBB800101   	528.00	 2000-05-03 00:00:00.000	5001
DDDD800101   	202.00	 1998-02-21 00:00:00.000	5003
EEEE800101   	263.00	 1999-12-11 00:00:00.000	5004

ALL

input:
FROM Entregan
WHERE Clave = ALL(SELECT Clave FROM Entregan WHERE Clave = 1000)
output: (3 renglones)
Clave
165.00
254.00
7.00

¿Qué hace la siguiente sentencia? Explica porque

input: SELECT TOP 2 * FROM Proyectos 
output: (2 renglones)
Numero	Denominacion
5000	Vamos Mexico
5001	Aztecón

Te regresa los primeros dos renglones de la tabla proyectos.

¿Qué sucede con la siguiente consulta? Explica porque

input: SELECT TOP 1 Numero FROM Proyectos
output: (1 renglon)
SELECT TOP 1 Numero
FROM Proyectos p

Te regresa el top 1 numero de la tabla proyectos.

ALTER TABLE materiales ADD PorcentajeImpuesto NUMERIC(6,2); 
UPDATE materiales SET PorcentajeImpuesto = 2*clave/1000; 
SELECT * FROM Materiales

¿Qué consulta usarías para obtener el importe de las entregas es decir, el total en dinero de lo entregado, basado en la cantidad de la entrega y el precio del material y el impuesto asignado? 

input:
SELECT Denominacion, SUM(Costo*Cantidad*(1+PorcentajeImpuesto/100)) as "Total A Pagar"
FROM Materiales M, Entregan E, Proyectos P
WHERE E.Clave = M.Clave AND E.Numero = P.Numero
GROUP BY Denominacion
output: (20 renglones)
Denominacion					Total A Pagar
Ampliación de la carretera a la huasteca	742461.1940000000
Aztecón	150200.2190000000
CIT Campeche	161603.0820000000



1
input:
CREATE VIEW Top_2_Proyectos("Numero", "Denominacion") as
SELECT TOP 2 * FROM Proyectos 

SELECT * FROM Top_2_Proyectos

output:(2 renglones)
numero	denominacion
5000	Vamos Mexico
5001	Aztecón

2
input:
CREATE VIEW Razon_Social_La("RFC","Cantidad","Fecha","Numero") as
SELECT RFC,Cantidad, Fecha,Numero
FROM [Entregan]
WHERE [Numero] Between 5000 and 5010 AND
Exists ( SELECT [RFC]
FROM [Proveedores]
WHERE RazonSocial LIKE 'La%' and [Entregan].[RFC] = [Proveedores].[RFC] ) 

SELECT * FROM Razon_Social_La
output: (16 renglones)
rfc		cantidadfecha			numero
AAAA800101   	165.00	1998-07-08 00:00:00.000	5000
CCCC800101   	582.00	2001-07-29 00:00:00.000	5002
AAAA800101   	86.00	1999-01-12 00:00:00.000	5008

3
input:
CREATE VIEW Clave_NOT_1000("Clave","RFC","Numero","Fecha","Cantidad") as
(select * from entregan where NOT clave=1000)

SELECT * FROM Clave_NOT_1000

output: (129 renglones)
1010	BBBB800101   	5001	2000-05-03 00:00:00.000	528.00
1010	BBBB800101   	5018	2000-11-10 00:00:00.000	667.00
1010	BBBB800101   	5018	2002-03-29 00:00:00.000	523.00


4
input:
CREATE VIEW Clave_1450("Clave","RFC","Numero","Fecha","Cantidad") as
select * from entregan where clave=1450

SELECT * FROM Clave_1450

output:(0 renglones)

5
input:
SET DATEFORMAT DMY;

CREATE VIEW Descripcion_Materiales_2000("Descripcion") as
select DISTINCT descripcion
from materiales, entregan 
where materiales.clave=entregan.clave AND 
Fecha BETWEEN '01/01/00' AND '31/12/00';

SELECT * FROM Descripcion_Materiales_2000

output:(22 renglones)
Arena
Block
Cantera rosa

A continuación se te dan muchos enunciados de los cuales deberás generar su correspondiente consulta. 

Los materiales (clave y descripción) entregados al proyecto "México sin ti no estamos completos". 
input:
select m.clave, descripcion
from materiales m, proyectos p, entregan e
where m.clave = e.clave and e.numero = p.numero 
and p.denominacion = 'Mexico sin ti no estamos completos'
output: (3 renglones)
1030	Varilla 4/33
1230	Cemento 
1430	Pintura B1022


Los materiales (clave y descripción) que han sido proporcionados por el proveedor "Acme tools". 
input:
select m.clave, descripcion
from materiales m, entregan e, proveedores pr
where m.clave = e.clave and pr.rfc = e.rfc
and pr.razonSocial = 'Acme tools'
output: (0 renglones)


El RFC de los proveedores que durante el 2000 entregaron en promedio cuando menos 300 materiales. 
input:
select rfc
from entregan
where fecha between '01/01/00' and '31/12/00'
group by rfc
having avg(cantidad)>=300
output: (7 renglones)
BBBB800101   
CCCC800101   
DDDD800101   

El Total entregado por cada material en el año 2000. 
input:
select descripcion, sum(cantidad) as 'total entregas'
from entregan e, materiales m
where e.clave = m.clave and fecha between '01/01/00' and '31/12/00'
group by descripcion
output: (22 renglones)
Arena	366.00
Block	466.00
Cantera rosa	162.00

La Clave del material más vendido durante el 2001. (se recomienda usar una vista intermedia para su solución)
input:
select top 1 clave
from entregan 
where fecha between '01/01/01' and '31/12/01'
group by clave
order by sum(cantidad) desc
output: (1 renglon)
1020

Productos que contienen el patrón 'ub' en su nombre.
input:
select descripcion
from materiales
where descripcion like '%ub%'
output: (12 renglones)
Recubrimiento P1001
Recubrimiento P1010
Recubrimiento P1019

Denominación y suma del total a pagar para todos los proyectos. 
input:
select denominacion, sum(costo*cantidad*(1+porcentajeImpuesto/100)) as 'total a pagar'
from materiales m, entregan e, proyectos p
where e.clave = m.clave and e.numero = p.numero
group by denominacion

output: (20 renglones)
Ampliación de la carretera a la huasteca	742461.1940000000
Aztecón	150200.2190000000
CIT Campeche	161603.0820000000

Denominación, RFC y RazonSocial de los proveedores que se suministran materiales al proyecto Televisa en acción que no se encuentran apoyando al proyecto Educando en Coahuila. (Solo usando vistas)
input:
create view a as
select denominacion, e.RFC, pr.RazonSocial
from proyectos p, entregan e, proveedores pr
where denominacion = 'Educando en coahuila'
and e.numero = p.numero and pr.RFC = e.RFC

select * from a

output: (4 renglones)
Educando en Coahuila	EEEE800101   	Alvin
Educando en Coahuila	HHHH800101   	Tubasa
Educando en Coahuila	HHHH800101   	Tubasa
Educando en Coahuila	AAAA800101   	La fragua

Denominación, RFC y RazonSocial de los proveedores que se suministran materiales al proyecto Televisa en acción que no se encuentran apoyando al proyecto Educando en Coahuila. (Sin usar vistas, utiliza not in, in o exists) 

input:
select denominacion, e.RFC, pr.RazonSocial
from proyectos p, entregan e, proveedores pr
where denominacion = 'Educando en coahuila'
and e.numero = p.numero and pr.RFC = e.RFC
output: (4 renglones)
Educando en Coahuila	EEEE800101   	Alvin
Educando en Coahuila	HHHH800101   	Tubasa
Educando en Coahuila	HHHH800101   	Tubasa
Educando en Coahuila	AAAA800101   	La fragua

Costo de los materiales y los Materiales que son entregados al proyecto Televisa en acción cuyos proveedores también suministran materiales al proyecto Educando en Coahuila.  
input:
select costo, descripcion
from proyectos p, entregan e, materiales m, proveedores pr
where denominacion = 'Televisa%' and  pr.RazonSocial LIKE 'Educando en Coahuila'
and e.numero = p.numero and m.clave = e.clave
output: (0 renglones)

Nombre del material, cantidad de veces entregados y total del costo de dichas entregas por material de todos los proyectos. 
input:
select descripcion, count(e.clave) as "Cantidad de veces entregado" , sum(e.Cantidad * m.Costo) as "Total del costo"
from entregan e, materiales m
where m.Clave = e.Clave
group by descripcion

output: (42 renglones)
Arena	3	213400.0000
Block	3	50640.0000
Cantera amarilla	3	172500.0000